{"id":724240,"xmlId":"Docker","name":"Docker","description":"<p>The <a href=\"https://www.jetbrains.com/help/idea/docker.html\">Docker Plugin</a> for JetBrains IDEs provides seamless integration with Docker and Podman (initial support), enabling developers to build, run, and manage containers directly within their preferred JetBrains environment. This powerful plugin simplifies containerized application development, making it easier to deploy, test, and debug applications in containers.</p>\n\n<h2>Key Features</h2>\n<ul>\n  <li>Effortlessly manage <a href=\"https://www.jetbrains.com/help/idea/docker-images.html\">Docker Images</a>, <a href=\"https://www.jetbrains.com/help/idea/docker-containers.html\">Containers</a>, and <a href=\"https://www.jetbrains.com/help/idea/docker-compose.html\">Compose projects</a> without leaving your JetBrains IDE.</li>\n  <li>Start, stop, and inspect Docker containers. Monitor container logs and interact with running containers through an integrated terminal.</li>\n  <li>Write, edit, and manage Dockerfiles and Docker Compose files with syntax highlighting, code completion, and validation features.</li>\n  <li>Create and manage Docker-based run configurations, including Docker Image, Dockerfile, and Docker Compose configurations, to streamline your development and deployment workflows.</li>\n  <li>Define and configure Docker run targets to test your applications in isolated and reproducible environments.</li>\n  <li>Access logs to diagnose and resolve issues with your Docker containers.</li>\n  <li>Enjoy support for <a href=\"https://www.jetbrains.com/help/idea/podman.html\">Podman</a>, an alternative container engine, providing flexibility and choice for container management.</li>\n</ul>\n\n<p>To configure, open <b>Settings | Build, Execution, Deployment | Docker</b>.</p>\n\n<p><a href=\"https://www.jetbrains.com/help/idea/docker.html\">Documentation</a></p>","organization":"JetBrains s.r.o.","tags":["Tools Integration"],"version":"251.23774.466","notes":"<p><b>2024.3</b></p>\n    <b>Podman</b>\n    <ul>\n      <li>\n        Initial Podman support has been added, providing an alternative to Docker for container management. Added support for Compose deployments using Podman.\n      </li>\n    </ul>\n    <b>Docker Compose</b>\n    <p>Editor support for docker compose have a lot of improvements:</p>\n    <ul>\n      <li>\n        .env files are now prioritized at the top of the autocompletion list for env_file configuration.\n      </li>\n      <li>\n        New build options: 'cache_to', 'no_cache', 'tags', and 'platforms', offering enhanced control over caching, tagging, and platform specifications.\n      </li>\n      <li>\n        Recognizes 'depends_on.required' and 'depends_on.restart' for better dependency and restart behavior management.\n      </li>\n      <li>\n        Adds 'deploy.placement.preferences' for flexible service placement options.\n      </li>\n      <li>\n        Supports resource management keys like 'deploy.resources.pids' and 'deploy.resources.reservations.devices'.\n      </li>\n      <li>\n        Enables multiple build contexts with 'build.additional_contexts' and supports privileged builds with 'build.privileged'.\n      </li>\n      <li>\n        Adds 'cgroup' configuration and long syntax for 'extra_hosts' to control service group settings and custom host mappings.\n      </li>\n      <li>\n        Introduces 'healthcheck.start_interval' for customizable health check intervals and supports 'networks.mac_address' for MAC address specifications.\n      </li>\n      <li>\n        Enhances port configuration with 'ports.name' and 'ports.app_protocol', and supports 'secrets.environment' for secret management through environment variables.\n      </li>\n      <li>\n        Added support for 'build.ulimits' and 'uts' keys in the editor.\n      </li>\n      <li>\n        Expanded Quick Help support for keys and sub-keys ('condition', 'constraints', 'resources', 'healthcheck', 'logging', 'ulimits', 'version').\n      </li>\n    </ul>\n    <b>Docker</b>\n    <p>Settings:</p>\n    <ul>\n      <li>Paths for executable files can be entered for each Docker configuration.</li>\n    </ul>\n    <b>Docker Registry</b>\n    <p>Services Tool Window:</p>\n    <ul>\n      <li>A modern icon is now used in the Services Tool Window for Docker Registry.</li>\n    </ul>","dependencies":["intellij.platform.clouds","intellij.libraries.ktor.client","com.intellij.modules.lang","com.intellij.modules.remoteServers"],"optionalDependencies":["com.intellij.java","intellij.yaml.backend","intellij.platform.vcs.impl","com.intellij.modules.ssh"],"since":"251.23774","until":"251.*","size":5837073,"vendor":"JetBrains"}